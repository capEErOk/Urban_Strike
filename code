from pygame import *
import math

win_width = 800
win_height = 600

globX = 0
globY = 0
move = True
heli_suits = []
for i in range(8):
    name = str(i+1) + ".png"
    picture = image.load(name)
    heli_suits.append(picture)

BLACK = (0,0,0)

win = display.set_mode((win_width, win_height))
display.set_caption("Вертолет")
win.fill((BLACK))

clock = time.Clock()
FPS = 60

class GameSprite(sprite.Sprite):
    def __init__(self, player_image, x, y, width, height, speed):
        super().__init__()
        self.image = transform.scale(image.load(player_image), (width,height))
        self.speed = speed
        self.rect = self.image.get_rect()
        self.rect.x = x
        self.rect.y = y

    def reset(self):
        win.blit(self.image, (self.rect.x, self.rect.y))

class Map(GameSprite):
    def update(self):
        global globX, globY, move
        keys_pressed = key.get_pressed()
        if move:
            if keys_pressed[K_LEFT] and globX < 0:
                globX += heli.speed
            
            if keys_pressed[K_RIGHT] and globX > win_width - self.rect.width:
                globX -= heli.speed
            
            if keys_pressed[K_UP] and globY < 0:
                globY += heli.speed
            
            if keys_pressed[K_DOWN] and globY > win_height - self.rect.height:
                globY -= heli.speed

            win.blit(self.image, (globX, globY))
        else:
            win.blit(self.image, (globX, globY))
            
class Helicopter(GameSprite):
    def update(self):
        global globX, globY, move
        keys_pressed = key.get_pressed()

        if keys_pressed[K_LEFT]:
            heli.image = transform.scale(image.load("1.png"), (160,100))
            if abs(globX) + self.rect.x < 400 or abs(globX) + self.rect.x > 1400:
                if self.rect.x > 0:
                    move = False
                    self.rect.x -= self.speed
                    
            else:
                move = True

        if keys_pressed[K_RIGHT]:
            heli.image = transform.scale(image.load("4.png"), (160,100))
            if abs(globX) + self.rect.x < 400 or abs(globX) + self.rect.x > 1400:
                if self.rect.x < win_width - self.rect.width: 
                    move = False
                    self.rect.x += self.speed
            else:
                move = True
        if keys_pressed[K_UP]:
            heli.image = transform.scale(image.load("7.png"), (160,100))
            if abs(globY) + self.rect.y <= 300 or abs(globY) + self.rect.y >= 900:
                if self.rect.y > 0:
                    move = False
                    self.rect.y -= self.speed
            else:
                move = True

        if keys_pressed[K_DOWN]:
            heli.image = transform.scale(image.load("2.png"), (160,100))
            if abs(globY) + self.rect.y <= 300 or abs(globY) + self.rect.y >= 900:
                if self.rect.y < win_height - self.rect.height: 
                    move = False
                    self.rect.y += self.speed
            else:
                move = True

        
    
class Enemy(GameSprite):
    def update(self, startX, startY):
        global glovX, globY
        self.rect.x = startX + globX
        self.rect.y = startY + globY

            
       

font.init()
font1 = font.SysFont("Arial", 50)
coord = font1.render("X:" +  str(globX) + "  " + "Y:" +  str(globY), True, (255,255,255))
coord2 = font1.render("X:" +  str(globX) + "  " + "Y:" +  str(globY), True, (255,255,255))


heli = Helicopter("2.png", 400, 300, 160, 100, 15)
landscape = Map("map1.png", globX, globY, 1800, 1200, 0)
skelet = Enemy("skelet.png", 900, 400, 100, 100, 0)


run = True
while run:
    for e in event.get():
        if e.type == QUIT:
            run = False
    
    

#    landscape.reset()
    landscape.update()
    heli.reset()
    heli.update()
    skelet.reset()
    skelet.update(900,400)
    coord = font1.render("X:" +  str(heli.rect.x) + "  " + "Y:" +  str(heli.rect.y), True, (255,255,255))
    coord2 = font1.render("X:" +  str(globX) + "  " + "Y:" +  str(globY), True, (255,255,255))
    win.blit(coord, (20,10))
    win.blit(coord2, (20,60))

    display.update()
    clock.tick(FPS)
